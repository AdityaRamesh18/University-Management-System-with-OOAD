/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package collegemanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Paul-Vance Pierre Nixon Jr.
 */
public class registerStaff extends javax.swing.JFrame {

    /**
     * Creates new form registerStaff
     */
    public registerStaff() {
        initComponents();
        conn = databaseConnection.Connect();
        
        try
        {
            // Load each college's name.
            pst = conn.prepareStatement("select name from college");
            rs = pst.executeQuery();
            
            // Load all the colleges' names into the combo box.
            while (rs.next())
                college_combo_box.addItem(rs.getString("name"));           
        }
        catch (SQLException ex)
        {
            Logger.getLogger(modifyDepartmentInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Global variables
    Connection conn; // Connection to the MySQL database
    PreparedStatement pst; // To write queries to the database 
    ResultSet rs; // To access tables derived from queries
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        staff_registration_label = new javax.swing.JLabel();
        prefix_label = new javax.swing.JLabel();
        prefix_combo_box = new javax.swing.JComboBox<>();
        fName_label = new javax.swing.JLabel();
        fName_text_field = new javax.swing.JTextField();
        mName_label = new javax.swing.JLabel();
        mName_text_field = new javax.swing.JTextField();
        lName_label = new javax.swing.JLabel();
        lName_text_field = new javax.swing.JTextField();
        suffix_label = new javax.swing.JLabel();
        suffix_combo_box = new javax.swing.JComboBox<>();
        dob_label = new javax.swing.JLabel();
        dob_text_field = new javax.swing.JFormattedTextField();
        gender_label = new javax.swing.JLabel();
        gender_combo_box = new javax.swing.JComboBox<>();
        ethnicity_label = new javax.swing.JLabel();
        ethnicity_combo_box = new javax.swing.JComboBox<>();
        email_label = new javax.swing.JLabel();
        password_label = new javax.swing.JLabel();
        password_text_field = new javax.swing.JPasswordField();
        position_label = new javax.swing.JLabel();
        position_combo_box = new javax.swing.JComboBox<>();
        college_label = new javax.swing.JLabel();
        college_combo_box = new javax.swing.JComboBox<>();
        dept_label = new javax.swing.JLabel();
        dept_combo_box = new javax.swing.JComboBox<>();
        telNo_label = new javax.swing.JLabel();
        telNo_text_field = new javax.swing.JFormattedTextField();
        salary_label = new javax.swing.JLabel();
        salary_text_field = new javax.swing.JFormattedTextField();
        clearButton = new javax.swing.JButton();
        enterButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        email_text_field = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        staff_registration_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        staff_registration_label.setForeground(java.awt.Color.black);
        staff_registration_label.setText("Staff Registration");

        prefix_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prefix_label.setText("Prefix:");

        prefix_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "null", "Dr.", "Miss", "Mr.", "Mrs.", "Ms.", "Professor" }));

        fName_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fName_label.setText("First name:");

        mName_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mName_label.setText("Middle name:");

        lName_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lName_label.setText("Last name:");

        suffix_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        suffix_label.setText("Suffix:");

        suffix_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "null", "Esq.", "I", "II", "III", "IV", "V", "VI", "VII", "M.D.", "Ph.D.", "Jr.", "Sr." }));

        dob_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dob_label.setText("DOB:");

        dob_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("y/M/d"))));

        gender_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gender_label.setText("Gender:");

        gender_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));

        ethnicity_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ethnicity_label.setText("Ethnicity:");

        ethnicity_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hispanic or Latino", "American Indian or Alaska Native", "Asian", "Black or African American", "Native Hawaiian or Other Pacific Islander", "White" }));

        email_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        email_label.setText("Email:");

        password_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        password_label.setText("Password:");

        position_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        position_label.setText("Position:");

        position_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adjunct Professor", "Assistant Professor", "Associate Professor", "Lecturer", "Dean", "Assistant Dean", "Associate Dean", "Department Chair", "First Department Chair", "Second Department Chair", "Other" }));

        college_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        college_label.setText("College:");

        dept_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dept_label.setText("Department:");

        dept_combo_box.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dept_combo_boxMouseClicked(evt);
            }
        });

        telNo_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        telNo_label.setText("Phone:");

        try {
            telNo_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("555-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        salary_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        salary_label.setText("Salary:");

        salary_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#####.##"))));

        clearButton.setText("Clear");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });

        enterButton.setText("Enter");
        enterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterButtonMouseClicked(evt);
            }
        });

        backButton.setText("Back");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dob_label)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(prefix_label)
                            .addGap(18, 18, 18)
                            .addComponent(prefix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(staff_registration_label)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mName_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mName_text_field))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fName_label)
                                .addGap(18, 18, 18)
                                .addComponent(fName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dept_label)
                                .addComponent(telNo_label)
                                .addComponent(salary_label))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dept_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(telNo_text_field, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                                .addComponent(salary_text_field)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lName_label)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(suffix_label)
                                                .addGap(45, 45, 45)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(gender_label)
                                            .addGap(38, 38, 38)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(ethnicity_label)
                                        .addGap(27, 27, 27)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(password_label)
                                        .addComponent(position_label)
                                        .addComponent(college_label)
                                        .addComponent(email_label))
                                    .addGap(22, 22, 22)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(college_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(position_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ethnicity_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(gender_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dob_text_field, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(lName_text_field)
                                .addComponent(password_text_field)
                                .addComponent(email_text_field)
                                .addComponent(suffix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(staff_registration_label)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prefix_label)
                    .addComponent(prefix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fName_label)
                    .addComponent(fName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mName_label)
                    .addComponent(mName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lName_label)
                    .addComponent(lName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suffix_label)
                    .addComponent(suffix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dob_label)
                    .addComponent(dob_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender_label)
                    .addComponent(gender_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ethnicity_label)
                    .addComponent(ethnicity_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email_label)
                    .addComponent(email_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password_label)
                    .addComponent(password_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(position_label)
                    .addComponent(position_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(college_label)
                    .addComponent(college_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dept_label)
                    .addComponent(dept_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telNo_label)
                    .addComponent(telNo_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salary_label)
                    .addComponent(salary_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(enterButton)
                    .addComponent(backButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // Display Login.java.
        this.hide();
        new Login().setVisible(true);
    }//GEN-LAST:event_backButtonMouseClicked

    private void enterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonMouseClicked
        /*
        Check if the admin filled all the text fields. If not, display a pop-up 
        telling them to fill the specified text field. If so, insert the new
        staff member's info into the database.
        */
        if (fName_text_field.getText().isEmpty() || fName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'First name' text field is either "
                                         + "empty or exceeds 20 characters.");
        }
        else if (mName_text_field.getText().isEmpty() || mName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'Middle name' text field is either "
                                         + "empty or exceeds 20 characters.");
        }
        else if (lName_text_field.getText().isEmpty() || lName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'Last name' text field is either "
                                         + "empty or exceeds 20 characters.");
        }
        else if (dob_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'DOB' text field is empty.");
        else if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", email_text_field.getText())) || email_text_field.getText().length() > 30)
        {
            JOptionPane.showMessageDialog(this, "The 'Email' text field is either "
                                         + "invalid or exceeds 30 characters.");
        }
        else if (password_text_field.getText().isEmpty() || password_text_field.getText().length() > 30)
        {
            JOptionPane.showMessageDialog(this, "The 'Password' text field is either "
                                         + "empty or exceeds 30 characters.");
        }
        else if (telNo_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'Phone' text field is empty.");
        else if (salary_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'Salary' text field is empty.");
        else
        {
            try
            {
                /*
                If the new staff member is an instructor, just insert them into the 
                staff table in the database. If they are a dean, 
                assistant dean, or associate dean, insert them into the staff 
                & college tables. If they are a department chair, insert them into
                the staff & department tables. Else, just insert them 
                into the staff table.
                */
                if (position_combo_box.getSelectedIndex() >= 0 && position_combo_box.getSelectedIndex() <= 3)
                {
                    // Initialize variables with their respective field's value.
                    String prefix = prefix_combo_box.getSelectedItem().toString();
                    String fName = fName_text_field.getText();
                    String mName = mName_text_field.getText();
                    String lName = lName_text_field.getText();
                    String suffix = suffix_combo_box.getSelectedItem().toString();
                    String dob = dob_text_field.getText();
                    String gender = gender_combo_box.getSelectedItem().toString();
                    String ethnicity = ethnicity_combo_box.getSelectedItem().toString();
                    String email = email_text_field.getText();
                    String username = email.substring(0, email.indexOf('@'));
                    String uniEmail = username + "@mascot.uni.edu";
                    String password = password_text_field.getText();
                    String position = position_combo_box.getSelectedItem().toString();
                    String college = college_combo_box.getSelectedItem().toString();
                    String department = dept_combo_box.getSelectedItem().toString();
                    String phone = telNo_text_field.getText();
                    String salary = salary_text_field.getText();
                
                    // Insert the values into the database.
                    pst = conn.prepareStatement("insert into staff(prefix, fName, mName, lName, "
                                             + "suffix, DOB, gender, ethnicity, email, uniEmail, "
                                             + "password, username, position, college, "
                                             + "department, telNo, salary) "
                                             + "values (?,?,?,?,?,?,?,?,?,?,?,?,?,"
                                             + "?,?,?,?)");
                    pst.setString(1, prefix);
                    pst.setString(2, fName);
                    pst.setString(3, mName);
                    pst.setString(4, lName);
                    pst.setString(5, suffix);
                    pst.setString(6, dob);
                    pst.setString(7, gender);
                    pst.setString(8, ethnicity);
                    pst.setString(9, email);
                    pst.setString(10, uniEmail);
                    pst.setString(11, password);
                    pst.setString(12, username);
                    pst.setString(13, position);
                    pst.setString(14, college);
                    pst.setString(15, department);
                    pst.setString(16, phone);
                    pst.setString(17, salary);
                    pst.executeUpdate();
                
                    /* Confirm to the new faculty member that they are in the 
                       database and clear the form. 
                    */
                    JOptionPane.showMessageDialog(this, "Welcome new faculty member!");
                    fName_text_field.setText("");
                    mName_text_field.setText("");
                    lName_text_field.setText("");
                    dob_text_field.setText("");
                    email_text_field.setText("");
                    password_text_field.setText("");
                    telNo_text_field.setText("");
                    salary_text_field.setText("");
                }
                else if (position_combo_box.getSelectedIndex() >= 4 && position_combo_box.getSelectedIndex() <= 6)
                {
                    // Initialize variables with their respective field's value.
                    String prefix = prefix_combo_box.getSelectedItem().toString();
                    String fName = fName_text_field.getText();
                    String mName = mName_text_field.getText();
                    String lName = lName_text_field.getText();
                    String suffix = suffix_combo_box.getSelectedItem().toString();
                    String dob = dob_text_field.getText();
                    String gender = gender_combo_box.getSelectedItem().toString();
                    String ethnicity = ethnicity_combo_box.getSelectedItem().toString();
                    String email = email_text_field.getText();
                    String username = email.substring(0, email.indexOf('@'));
                    String uniEmail = username + "@mascot.uni.edu";
                    String password = password_text_field.getText();
                    String position = position_combo_box.getSelectedItem().toString();
                    String college = college_combo_box.getSelectedItem().toString();
                    String department = dept_combo_box.getSelectedItem().toString();
                    String phone = telNo_text_field.getText();
                    String salary = salary_text_field.getText();
                
                    // Insert the values into the database.
                    pst = conn.prepareStatement("insert into staff(prefix, fName, mName, lName, "
                                             + "suffix, DOB, gender, ethnicity, email, uniEmail, "
                                             + "password, username, position, college, "
                                             + "department, telNo, salary) "
                                             + "values (?,?,?,?,?,?,?,?,?,?,?,?,?,"
                                             + "?,?,?,?)");
                    pst.setString(1, prefix);
                    pst.setString(2, fName);
                    pst.setString(3, mName);
                    pst.setString(4, lName);
                    pst.setString(5, suffix);
                    pst.setString(6, dob);
                    pst.setString(7, gender);
                    pst.setString(8, ethnicity);
                    pst.setString(9, email);
                    pst.setString(10, uniEmail);
                    pst.setString(11, password);
                    pst.setString(12, username);
                    pst.setString(13, position);
                    pst.setString(14, college);
                    pst.setString(15, department);
                    pst.setString(16, phone);
                    pst.setString(17, salary);
                    pst.executeUpdate();
                    
                    // Insert the dean into the college table in the database.
                    pst = conn.prepareStatement("select * from staff", ResultSet.TYPE_SCROLL_SENSITIVE,
                                               ResultSet.CONCUR_UPDATABLE);
                    rs = pst.executeQuery();
                    
                    while (rs.last())
                    {
                        switch (position_combo_box.getSelectedIndex())
                        {
                            case 4: // Dean
                                pst = conn.prepareStatement("update college set deanPrefix = ?, "
                                                         + "dean_fName = ?, dean_mName = ?, "
                                                         + "dean_lName = ?, deanSuffix = ? where "
                                                         + "name = ?");
                                pst.setString(1, rs.getString("prefix"));
                                pst.setString(2, rs.getString("fName"));
                                pst.setString(3, rs.getString("mName"));
                                pst.setString(4, rs.getString("lName"));
                                pst.setString(5, rs.getString("suffix"));
                                pst.setString(6, rs.getString("college"));
                                pst.executeUpdate();
                                break;
                                
                            case 5: // Assistant Dean
                                pst = conn.prepareStatement("update college set asstDean_prefix = ?, "
                                                         + "asstDean_fName = ?, asstDean_mName = ?, "
                                                         + "asstDean_lName = ?, asstDean_suffix = ? "
                                                         + "where name = ?");
                                pst.setString(1, rs.getString("prefix"));
                                pst.setString(2, rs.getString("fName"));
                                pst.setString(3, rs.getString("mName"));
                                pst.setString(4, rs.getString("lName"));
                                pst.setString(5, rs.getString("suffix"));
                                pst.setString(6, rs.getString("college"));
                                pst.executeUpdate();
                                break;
                                
                            case 6: // Associate Dean
                                pst = conn.prepareStatement("update college set assocDean_prefix = ?, "
                                                         + "assocDean_fName = ?, assocDean_mName = ?, "
                                                         + "assocDean_lName = ?, assocDean_suffix = ? "
                                                         + "where name = ?");
                                pst.setString(1, rs.getString("prefix"));
                                pst.setString(2, rs.getString("fName"));
                                pst.setString(3, rs.getString("mName"));
                                pst.setString(4, rs.getString("lName"));
                                pst.setString(5, rs.getString("suffix"));
                                pst.setString(6, rs.getString("college"));
                                pst.executeUpdate();
                                break;
                        }
                        break; // To break out of the while loop
                    }
                    
                    /* Confirm to the new dean that they are in the 
                       database and clear the form. 
                    */
                    JOptionPane.showMessageDialog(this, "Welcome new dean!");
                    fName_text_field.setText("");
                    mName_text_field.setText("");
                    lName_text_field.setText("");
                    dob_text_field.setText("");
                    email_text_field.setText("");
                    password_text_field.setText("");
                    telNo_text_field.setText("");
                    salary_text_field.setText("");
                }
                else if (position_combo_box.getSelectedIndex() >= 7 && position_combo_box.getSelectedIndex() <= 9)
                {
                    // Initialize variables with their respective field's value.
                    String prefix = prefix_combo_box.getSelectedItem().toString();
                    String fName = fName_text_field.getText();
                    String mName = mName_text_field.getText();
                    String lName = lName_text_field.getText();
                    String suffix = suffix_combo_box.getSelectedItem().toString();
                    String dob = dob_text_field.getText();
                    String gender = gender_combo_box.getSelectedItem().toString();
                    String ethnicity = ethnicity_combo_box.getSelectedItem().toString();
                    String email = email_text_field.getText();
                    String username = email.substring(0, email.indexOf('@'));
                    String uniEmail = username + "@mascot.uni.edu";
                    String password = password_text_field.getText();
                    String position = position_combo_box.getSelectedItem().toString();
                    String college = college_combo_box.getSelectedItem().toString();
                    String department = dept_combo_box.getSelectedItem().toString();
                    String phone = telNo_text_field.getText();
                    String salary = salary_text_field.getText();
                
                    // Insert the values into the database.
                    pst = conn.prepareStatement("insert into staff(prefix, fName, mName, lName, "
                                             + "suffix, DOB, gender, ethnicity, email, uniEmail, "
                                             + "password, username, position, college, "
                                             + "department, telNo, salary) "
                                             + "values (?,?,?,?,?,?,?,?,?,?,?,?,?,"
                                             + "?,?,?,?)");
                    pst.setString(1, prefix);
                    pst.setString(2, fName);
                    pst.setString(3, mName);
                    pst.setString(4, lName);
                    pst.setString(5, suffix);
                    pst.setString(6, dob);
                    pst.setString(7, gender);
                    pst.setString(8, ethnicity);
                    pst.setString(9, email);
                    pst.setString(10, uniEmail);
                    pst.setString(11, password);
                    pst.setString(12, username);
                    pst.setString(13, position);
                    pst.setString(14, college);
                    pst.setString(15, department);
                    pst.setString(16, phone);
                    pst.setString(17, salary);
                    pst.executeUpdate();
                    
                    // Insert the chairman into the department table.
                    pst = conn.prepareStatement("select * from staff", ResultSet.TYPE_SCROLL_SENSITIVE,
                                               ResultSet.CONCUR_UPDATABLE);
                    rs = pst.executeQuery();
                    
                    while (rs.last())
                    {
                        switch (position_combo_box.getSelectedIndex())
                        {
                            case 7: // Department Chair
                                pst = conn.prepareStatement("update department set deptChair_prefix = ?, "
                                                         + "deptChair_fName = ?, deptChair_mName = ?, "
                                                         + "deptChair_lName = ?, deptChair_suffix = ? "
                                                         + "where name = ?");
                                pst.setString(1, rs.getString("prefix"));
                                pst.setString(2, rs.getString("fName"));
                                pst.setString(3, rs.getString("mName"));
                                pst.setString(4, rs.getString("lName"));
                                pst.setString(5, rs.getString("suffix"));
                                pst.setString(6, rs.getString("department"));
                                pst.executeUpdate();
                                break;
                                
                            case 8: // 1st Dept. Chair
                                pst = conn.prepareStatement("update department set "
                                                         + "firstAsstChair_prefix = ?, "
                                                         + "firstAsstChair_fName = ?, "
                                                         + "firstAsstChair_mName = ?, "
                                                         + "firstAsstChair_lName = ?, "
                                                         + "firstAsstChair_suffix = ? "
                                                         + "where name = ?");
                                pst.setString(1, rs.getString("prefix"));
                                pst.setString(2, rs.getString("fName"));
                                pst.setString(3, rs.getString("mName"));
                                pst.setString(4, rs.getString("lName"));
                                pst.setString(5, rs.getString("suffix"));
                                pst.setString(6, rs.getString("department"));
                                pst.executeUpdate();
                                break;
                                
                            case 9: // 2nd Dept. Chair
                                pst = conn.prepareStatement("update department set "
                                                         + "secAsstChair_prefix = ?, "
                                                         + "secAsstChair_fName = ?, "
                                                         + "secAsstChair_mName = ?, "
                                                         + "secAsstChair_lName = ?, "
                                                         + "secAsstChair_suffix = ? "
                                                         + "where name = ?");
                                pst.setString(1, rs.getString("prefix"));
                                pst.setString(2, rs.getString("fName"));
                                pst.setString(3, rs.getString("mName"));
                                pst.setString(4, rs.getString("lName"));
                                pst.setString(5, rs.getString("suffix"));
                                pst.setString(6, rs.getString("department"));
                                pst.executeUpdate();
                                break;
                        }
                        
                        break; // To break out of the while loop
                    }
                    
                    /* Confirm to the new dept. chairman that they are in the 
                       database and clear the form. 
                    */
                    JOptionPane.showMessageDialog(this, "Welcome new department chairman!");
                    fName_text_field.setText("");
                    mName_text_field.setText("");
                    lName_text_field.setText("");
                    dob_text_field.setText("");
                    email_text_field.setText("");
                    password_text_field.setText("");
                    telNo_text_field.setText("");
                    salary_text_field.setText("");
                }
                else
                {
                    // Initialize variables with their respective field's value.
                    String prefix = prefix_combo_box.getSelectedItem().toString();
                    String fName = fName_text_field.getText();
                    String mName = mName_text_field.getText();
                    String lName = lName_text_field.getText();
                    String suffix = suffix_combo_box.getSelectedItem().toString();
                    String dob = dob_text_field.getText();
                    String gender = gender_combo_box.getSelectedItem().toString();
                    String ethnicity = ethnicity_combo_box.getSelectedItem().toString();
                    String email = email_text_field.getText();
                    String username = email.substring(0, email.indexOf('@'));
                    String uniEmail = username + "@mascot.uni.edu";
                    String password = password_text_field.getText();
                    String position = position_combo_box.getSelectedItem().toString();
                    String college = college_combo_box.getSelectedItem().toString();
                    String department = dept_combo_box.getSelectedItem().toString();
                    String phone = telNo_text_field.getText();
                    String salary = salary_text_field.getText();
                
                    // Insert the values into the database.
                    pst = conn.prepareStatement("insert into staff(prefix, fName, mName, lName, "
                                             + "suffix, DOB, gender, ethnicity, email, uniEmail, "
                                             + "password, username, position, college, "
                                             + "department, telNo, salary) "
                                             + "values (?,?,?,?,?,?,?,?,?,?,?,?,?,"
                                             + "?,?,?,?)");
                    pst.setString(1, prefix);
                    pst.setString(2, fName);
                    pst.setString(3, mName);
                    pst.setString(4, lName);
                    pst.setString(5, suffix);
                    pst.setString(6, dob);
                    pst.setString(7, gender);
                    pst.setString(8, ethnicity);
                    pst.setString(9, email);
                    pst.setString(10, uniEmail);
                    pst.setString(11, password);
                    pst.setString(12, username);
                    pst.setString(13, position);
                    pst.setString(14, college);
                    pst.setString(15, department);
                    pst.setString(16, phone);
                    pst.setString(17, salary);
                    pst.executeUpdate();
                
                    /* Confirm to the new staff member that they are in the 
                       database and clear the form. 
                    */
                    JOptionPane.showMessageDialog(this, "Welcome new staff member!");
                    fName_text_field.setText("");
                    mName_text_field.setText("");
                    lName_text_field.setText("");
                    dob_text_field.setText("");
                    email_text_field.setText("");
                    password_text_field.setText("");
                    telNo_text_field.setText("");
                    salary_text_field.setText("");
                }
            }
            catch (SQLException ex)
            {
                Logger.getLogger(registerStaff.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_enterButtonMouseClicked

    private void dept_combo_boxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dept_combo_boxMouseClicked
        try
        {
            /*
            Load each deprtment's name which corresponds to the college that the admin
            chose.
            */
            String college = college_combo_box.getSelectedItem().toString();
            pst = conn.prepareStatement("select name from department where college = ?");
            pst.setString(1, college);
            rs = pst.executeQuery();

            // Load all the departments' names into the combo box.
            dept_combo_box.removeAllItems();
            while (rs.next())
                dept_combo_box.addItem(rs.getString("name"));           
        }
        catch (SQLException ex)
        {
            Logger.getLogger(registerStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dept_combo_boxMouseClicked

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked
        // Clear all the text fields.
        fName_text_field.setText("");
        mName_text_field.setText("");
        lName_text_field.setText("");
        dob_text_field.setText("");
        email_text_field.setText("");
        password_text_field.setText("");
        telNo_text_field.setText("");
        salary_text_field.setText("");
    }//GEN-LAST:event_clearButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registerStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registerStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registerStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registerStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registerStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> college_combo_box;
    private javax.swing.JLabel college_label;
    private javax.swing.JComboBox<String> dept_combo_box;
    private javax.swing.JLabel dept_label;
    private javax.swing.JLabel dob_label;
    private javax.swing.JFormattedTextField dob_text_field;
    private javax.swing.JLabel email_label;
    private javax.swing.JTextField email_text_field;
    private javax.swing.JButton enterButton;
    private javax.swing.JComboBox<String> ethnicity_combo_box;
    private javax.swing.JLabel ethnicity_label;
    private javax.swing.JLabel fName_label;
    private javax.swing.JTextField fName_text_field;
    private javax.swing.JComboBox<String> gender_combo_box;
    private javax.swing.JLabel gender_label;
    private javax.swing.JLabel lName_label;
    private javax.swing.JTextField lName_text_field;
    private javax.swing.JLabel mName_label;
    private javax.swing.JTextField mName_text_field;
    private javax.swing.JLabel password_label;
    private javax.swing.JPasswordField password_text_field;
    private javax.swing.JComboBox<String> position_combo_box;
    private javax.swing.JLabel position_label;
    private javax.swing.JComboBox<String> prefix_combo_box;
    private javax.swing.JLabel prefix_label;
    private javax.swing.JLabel salary_label;
    private javax.swing.JFormattedTextField salary_text_field;
    private javax.swing.JLabel staff_registration_label;
    private javax.swing.JComboBox<String> suffix_combo_box;
    private javax.swing.JLabel suffix_label;
    private javax.swing.JLabel telNo_label;
    private javax.swing.JFormattedTextField telNo_text_field;
    // End of variables declaration//GEN-END:variables
}
