/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package collegemanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Paul-Vance Pierre Nixon Jr.
 */
public class staffHome extends javax.swing.JFrame {

    /**
     * Creates new form staffHome
     */
    public staffHome() {
        initComponents();
    }

    // Global variables
    Connection conn; // Connection to the MySQL database
    PreparedStatement pst; // To write queries to the database 
    ResultSet rs; // To access tables derived from queries
    String id; // The staff member's id
    
    staffHome(String id) // Loaded constructor
    {
        initComponents();
        conn = databaseConnection.Connect();
        this.id = id;
        staff_id_label.setText("ID: " + id);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        personal_info_button = new javax.swing.JButton();
        staff_id_label = new javax.swing.JLabel();
        staff_faculty_home_label = new javax.swing.JLabel();
        instructor_registration_button = new javax.swing.JButton();
        view_courses_button = new javax.swing.JButton();
        view_students_button = new javax.swing.JButton();
        staffHome_MenuBar = new javax.swing.JMenuBar();
        logoutButton = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        personal_info_button.setText("Personal Info");
        personal_info_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        personal_info_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personal_info_buttonMouseClicked(evt);
            }
        });

        staff_id_label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        staff_id_label.setText("jLabel1");

        staff_faculty_home_label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        staff_faculty_home_label.setForeground(java.awt.Color.black);
        staff_faculty_home_label.setText("Staff/Faculty Home");

        instructor_registration_button.setText("Instructor Registration");
        instructor_registration_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        instructor_registration_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                instructor_registration_buttonMouseClicked(evt);
            }
        });

        view_courses_button.setText("View Courses");
        view_courses_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        view_courses_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                view_courses_buttonMouseClicked(evt);
            }
        });

        view_students_button.setText("View Students");
        view_students_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        view_students_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                view_students_buttonMouseClicked(evt);
            }
        });

        logoutButton.setText("Logout");
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });
        staffHome_MenuBar.add(logoutButton);

        setJMenuBar(staffHome_MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(personal_info_button)
                        .addGap(61, 61, 61)
                        .addComponent(instructor_registration_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(view_courses_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(staff_faculty_home_label))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(191, 191, 191)
                                .addComponent(view_students_button)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(staff_id_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(staff_id_label)
                .addGap(11, 11, 11)
                .addComponent(staff_faculty_home_label)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personal_info_button)
                    .addComponent(instructor_registration_button)
                    .addComponent(view_courses_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(view_students_button)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void personal_info_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personal_info_buttonMouseClicked
        // Display staffPersonalInfo.java.
        this.hide();
        new staffPersonalInfo(id).setVisible(true);
    }//GEN-LAST:event_personal_info_buttonMouseClicked

    private void instructor_registration_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_instructor_registration_buttonMouseClicked
        /*
        If the staff member isn't an instructor, display a pop-up message
        telling them so and change their position to access instructorRegistration
        .java. Else, display instructorRegistration.java.
        */
        try
        {
            pst = conn.prepareStatement("select position from staff where staffNo = ?");
            pst.setString(1, id);
            rs = pst.executeQuery(); 
            
            if (rs.next() && (rs.getString("position").contains("Professor") || rs.getString("position").equals("Lecturer")))
            {
                this.hide();
                new instructorRegistration(id).setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "You are not an instructor. "
                                            + "Change your position to a type of "
                                            + "professor or Lecturer to register to teach a course.");
            }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(staffHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_instructor_registration_buttonMouseClicked

    private void view_courses_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_view_courses_buttonMouseClicked
        /*
        If the staff member isn't an instructor, display a pop-up message
        telling them so and change their position to access viewCourses
        .java. Else, display viewCourses.java.
        */
        try
        {
            pst = conn.prepareStatement("select position from staff where staffNo = ?");
            pst.setString(1, id);
            rs = pst.executeQuery();
            
            if (rs.next() && (rs.getString("position").contains("Professor") || rs.getString("position").equals("Lecturer")))
            {
                this.hide();
                new viewCourses(id).setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "You are not an instructor. "
                                            + "Change your position to a type of "
                                            + "professor or Lecturer to view courses you'd "
                                            + "be teaching.");
            }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(staffHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_view_courses_buttonMouseClicked

    private void view_students_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_view_students_buttonMouseClicked
        /*
        If the staff member isn't an instructor, display a pop-up message
        telling them so and change their position to access viewStudents
        .java. Else, display viewCourses.java.
        */
        try
        {
            pst = conn.prepareStatement("select position from staff where staffNo = ?");
            pst.setString(1, id);
            rs = pst.executeQuery();
            
            if (rs.next() && (rs.getString("position").contains("Professor") || rs.getString("position").equals("Lecturer")))
            {
                this.hide();
                new viewStudents(id).setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "You are not an instructor. "
                                            + "Change your position to a type of "
                                            + "professor or Lecturer to view the students of "
                                            + " the respective courses you'd be teaching.");
            }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(staffHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_view_students_buttonMouseClicked

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        // Display Login.java.
        this.hide();
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staffHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staffHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staffHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staffHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Crpersonal_info_button display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new staffHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton instructor_registration_button;
    private javax.swing.JMenu logoutButton;
    private javax.swing.JButton personal_info_button;
    private javax.swing.JMenuBar staffHome_MenuBar;
    private javax.swing.JLabel staff_faculty_home_label;
    private javax.swing.JLabel staff_id_label;
    private javax.swing.JButton view_courses_button;
    private javax.swing.JButton view_students_button;
    // End of variables declaration//GEN-END:variables
}
