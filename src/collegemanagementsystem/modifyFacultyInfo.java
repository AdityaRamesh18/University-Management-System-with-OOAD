/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package collegemanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Paul-Vance Pierre Nixon Jr.
 */
public class modifyFacultyInfo extends javax.swing.JFrame {

    /**
     * Creates new form modifyFacultyInfo
     */
    public modifyFacultyInfo() {
        initComponents();
        conn = databaseConnection.Connect();
        facultyLoad();
        
        try
        {
            // Load each college's name.
            pst = conn.prepareStatement("select name from college");
            rs = pst.executeQuery();
            
            // Load all the colleges' names into the combo box.
            while (rs.next())
                college_combo_box.addItem(rs.getString("name"));   
        }
        catch (SQLException ex)
        {
            Logger.getLogger(modifyDepartmentInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Global variables
    Connection conn; // Connection to the MySQL database
    PreparedStatement pst; // To write queries to the database 
    ResultSet rs; // To access tables derived from queries
    DefaultTableModel dtm; // To modify the table
    
    /*
    facultyLoad() is a fetch function which retrieves every faculty member's info from the
    MySQL database and renders them in the table.
    Pre-condition: There's at least one faculty member entry in the database.
    Post-condition: The faculty members' info is rendered in the table.
    */
    private void facultyLoad()
    {
        try
        {
            // Load each faculty member's info.
            pst = conn.prepareStatement("select * from staff where position like "
                                     + "'%Professor%' or position = 'Lecturer'");
            rs = pst.executeQuery();
            
            // Set the number of the table's rows to 0.
            ResultSetMetaData rsd = rs.getMetaData(); // To get the number of columns from the query
            dtm = (DefaultTableModel)faculty_info_table.getModel();
            dtm.setRowCount(0);
            
            // Load each faculty member's info into the info table.
            while (rs.next())
            {
                Vector vector = new Vector();
                
                for (int index = 1; index <= rsd.getColumnCount(); index++)
                {
                    vector.add(rs.getString("staffNo"));
                    vector.add(rs.getString("prefix"));
                    vector.add(rs.getString("fName"));
                    vector.add(rs.getString("mName"));
                    vector.add(rs.getString("lName"));
                    vector.add(rs.getString("suffix"));
                    vector.add(rs.getString("DOB"));
                    vector.add(rs.getString("gender"));
                    vector.add(rs.getString("ethnicity"));
                    vector.add(rs.getString("email"));
                    vector.add(rs.getString("uniEmail"));
                    vector.add(rs.getString("username"));
                    vector.add(rs.getString("password"));
                    vector.add(rs.getString("position"));
                    vector.add(rs.getString("college"));
                    vector.add(rs.getString("department"));
                    vector.add(rs.getString("officeNo"));
                    vector.add(rs.getString("officeDays"));
                    vector.add(rs.getString("office_start_time"));
                    vector.add(rs.getString("office_end_time"));
                    vector.add(rs.getString("telNo"));
                    vector.add(rs.getString("salary"));
                }
                
                dtm.addRow(vector); // Adds a faculty member's info as one of the table's rows
            }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(modifyFacultyInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        faculty_info_form = new javax.swing.JPanel();
        prefix_label = new javax.swing.JLabel();
        prefix_combo_box = new javax.swing.JComboBox<>();
        fName_label = new javax.swing.JLabel();
        fName_text_field = new javax.swing.JTextField();
        mName_label = new javax.swing.JLabel();
        mName_text_field = new javax.swing.JTextField();
        lName_label = new javax.swing.JLabel();
        lName_text_field = new javax.swing.JTextField();
        suffix_label = new javax.swing.JLabel();
        suffix_combo_box = new javax.swing.JComboBox<>();
        dob_label = new javax.swing.JLabel();
        dob_text_field = new javax.swing.JFormattedTextField();
        gender_label = new javax.swing.JLabel();
        gender_combo_box = new javax.swing.JComboBox<>();
        ethnicity_label = new javax.swing.JLabel();
        ethnicity_combo_box = new javax.swing.JComboBox<>();
        email_label = new javax.swing.JLabel();
        email_text_field = new javax.swing.JTextField();
        password_label = new javax.swing.JLabel();
        password_text_field = new javax.swing.JPasswordField();
        position_label = new javax.swing.JLabel();
        position_combo_box = new javax.swing.JComboBox<>();
        college_label = new javax.swing.JLabel();
        college_combo_box = new javax.swing.JComboBox<>();
        dept_label = new javax.swing.JLabel();
        dept_combo_box = new javax.swing.JComboBox<>();
        officeNo_label = new javax.swing.JLabel();
        officeNo_text_field = new javax.swing.JFormattedTextField();
        officeDays_label = new javax.swing.JLabel();
        officeDays_combo_box = new javax.swing.JComboBox<>();
        office_start_time_label = new javax.swing.JLabel();
        office_start_time_text_field = new javax.swing.JFormattedTextField();
        office_end_time_label = new javax.swing.JLabel();
        office_end_time_text_field = new javax.swing.JFormattedTextField();
        telNo_label = new javax.swing.JLabel();
        telNo_text_field = new javax.swing.JFormattedTextField();
        salary_label = new javax.swing.JLabel();
        salary_text_field = new javax.swing.JFormattedTextField();
        insertButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        faculty_info_scroll_pane = new javax.swing.JScrollPane();
        faculty_info_table = new javax.swing.JTable();
        modifyFacultyInfo_MenuBar = new javax.swing.JMenuBar();
        backButton = new javax.swing.JMenu();
        logoutButton = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        faculty_info_form.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        prefix_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prefix_label.setText("Prefix:");

        prefix_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "null", "Dr.", "Miss", "Mr.", "Mrs.", "Ms.", "Professor" }));
        prefix_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        fName_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fName_label.setText("First name:");

        mName_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mName_label.setText("Middle name:");

        lName_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lName_label.setText("Last name:");

        suffix_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        suffix_label.setText("Suffix:");

        suffix_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "null", "Esq.", "I", "II", "III", "IV", "V", "VI", "VII", "M.D.", "Ph.D.", "Jr.", "Sr." }));
        suffix_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        dob_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dob_label.setText("DOB:");

        dob_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("y/M/d"))));

        gender_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gender_label.setText("Gender:");

        gender_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));
        gender_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        ethnicity_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ethnicity_label.setText("Ethnicity:");

        ethnicity_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hispanic or Latino", "American Indian or Alaska Native", "Asian", "Black or African American", "Native Hawaiian or Other Pacific Islander", "White" }));
        ethnicity_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        email_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        email_label.setText("Email:");

        password_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        password_label.setText("Password:");

        position_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        position_label.setText("Position:");

        position_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adjunct Professor", "Assistant Professor", "Associate Professor", "Lecturer" }));
        position_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        college_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        college_label.setText("College:");

        college_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        dept_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dept_label.setText("Department:");

        dept_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dept_combo_box.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dept_combo_boxMouseClicked(evt);
            }
        });

        officeNo_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        officeNo_label.setText("Office Number:");

        try {
            officeNo_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("U-###*")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        officeDays_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        officeDays_label.setText("Office Days:");

        officeDays_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mon", "Tu", "Wed", "Th", "Fri", "Mon/Wed", "Tu/Th" }));
        officeDays_combo_box.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        office_start_time_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        office_start_time_label.setText("Office Start Time:");

        office_start_time_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm:ss"))));
        office_start_time_text_field.setToolTipText("'null' or enter a time");

        office_end_time_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        office_end_time_label.setText("Office End Time:");

        office_end_time_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm:ss"))));
        office_end_time_text_field.setToolTipText("'null' or enter a time");

        telNo_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        telNo_label.setText("Phone:");

        try {
            telNo_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("555-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        salary_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        salary_label.setText("Salary:");

        salary_text_field.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#####.##"))));

        insertButton.setText("Insert");
        insertButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        insertButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertButtonMouseClicked(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });

        faculty_info_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Prefix", "fName", "mName", "lName", "Suffix", "DOB", "Gender", "Ethnicity", "Email", "uniEmail", "Username", "Password", "Position", "College", "Department", "officeNo", "officeDays", "office_start_time", "office_end_time", "telNo", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        faculty_info_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        faculty_info_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                faculty_info_tableMouseClicked(evt);
            }
        });
        faculty_info_scroll_pane.setViewportView(faculty_info_table);

        javax.swing.GroupLayout faculty_info_formLayout = new javax.swing.GroupLayout(faculty_info_form);
        faculty_info_form.setLayout(faculty_info_formLayout);
        faculty_info_formLayout.setHorizontalGroup(
            faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(faculty_info_formLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(faculty_info_formLayout.createSequentialGroup()
                        .addComponent(insertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton))
                    .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(faculty_info_formLayout.createSequentialGroup()
                                .addComponent(prefix_label)
                                .addGap(18, 18, 18)
                                .addComponent(prefix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(faculty_info_formLayout.createSequentialGroup()
                                .addComponent(fName_label)
                                .addGap(18, 18, 18)
                                .addComponent(fName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(faculty_info_formLayout.createSequentialGroup()
                                .addComponent(mName_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mName_text_field))
                            .addGroup(faculty_info_formLayout.createSequentialGroup()
                                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lName_label)
                                    .addComponent(suffix_label)
                                    .addComponent(dob_label)
                                    .addComponent(gender_label)
                                    .addComponent(ethnicity_label))
                                .addGap(18, 18, 18)
                                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ethnicity_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(gender_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dob_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(college_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(position_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lName_text_field)
                                                        .addComponent(email_text_field)
                                                        .addGroup(faculty_info_formLayout.createSequentialGroup()
                                                            .addComponent(suffix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(0, 0, Short.MAX_VALUE))
                                                        .addComponent(password_text_field)))))))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, faculty_info_formLayout.createSequentialGroup()
                                .addComponent(office_end_time_label)
                                .addGap(107, 107, 107))
                            .addGroup(faculty_info_formLayout.createSequentialGroup()
                                .addComponent(telNo_label)
                                .addGap(162, 162, 162))))
                    .addComponent(email_label)
                    .addComponent(password_label)
                    .addComponent(position_label)
                    .addComponent(college_label)
                    .addGroup(faculty_info_formLayout.createSequentialGroup()
                        .addComponent(dept_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dept_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(faculty_info_formLayout.createSequentialGroup()
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(officeNo_label)
                            .addComponent(officeDays_label))
                        .addGap(18, 18, 18)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(officeDays_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(officeNo_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(faculty_info_formLayout.createSequentialGroup()
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(office_start_time_label)
                            .addComponent(salary_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(salary_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(office_end_time_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(office_start_time_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telNo_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(faculty_info_formLayout.createSequentialGroup()
                        .addComponent(clearButton)
                        .addContainerGap(651, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, faculty_info_formLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(faculty_info_scroll_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        faculty_info_formLayout.setVerticalGroup(
            faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(faculty_info_formLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(faculty_info_formLayout.createSequentialGroup()
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prefix_label)
                            .addComponent(prefix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fName_label)
                            .addComponent(fName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mName_label)
                            .addComponent(mName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lName_label)
                            .addComponent(lName_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suffix_label)
                            .addComponent(suffix_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dob_label)
                            .addComponent(dob_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gender_label)
                            .addComponent(gender_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ethnicity_label)
                            .addComponent(ethnicity_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email_label)
                            .addComponent(email_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(password_label)
                            .addComponent(password_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(position_label)
                            .addComponent(position_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(college_label)
                            .addComponent(college_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dept_label)
                            .addComponent(dept_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(faculty_info_scroll_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(officeNo_label)
                    .addComponent(officeNo_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(officeDays_label)
                    .addComponent(officeDays_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(office_start_time_label)
                    .addComponent(office_start_time_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(office_end_time_label)
                    .addComponent(office_end_time_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telNo_label)
                    .addComponent(telNo_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salary_label)
                    .addComponent(salary_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(faculty_info_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton)
                    .addComponent(updateButton)
                    .addComponent(deleteButton)
                    .addComponent(clearButton))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(faculty_info_form);

        backButton.setText("Back");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });
        modifyFacultyInfo_MenuBar.add(backButton);

        logoutButton.setText("Logout");
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });
        modifyFacultyInfo_MenuBar.add(logoutButton);

        setJMenuBar(modifyFacultyInfo_MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // Return to adminHome.java.
        this.hide();
        new adminHome().setVisible(true);
    }//GEN-LAST:event_backButtonMouseClicked

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        // Return to Login.java.
        this.hide(); 
        new Login().setVisible(true); // Displays Login.java
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void dept_combo_boxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dept_combo_boxMouseClicked
        try
        {
            /*
            Load each department's name which corresponds to the college that the admin
            chose.
            */
            pst = conn.prepareStatement("select name from department where college = ?");
            pst.setString(1, college_combo_box.getSelectedItem().toString());
            rs = pst.executeQuery();

            // Load all the departments' names into the combo box.
            dept_combo_box.removeAllItems();
            while (rs.next())
                dept_combo_box.addItem(rs.getString("name"));
        }
        catch (SQLException ex)
        {
            Logger.getLogger(modifyFacultyInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dept_combo_boxMouseClicked

    private void insertButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertButtonMouseClicked
        /*
        Check if the admin filled all the text fields. If not, display a pop-up
        telling them to fill the specified text field. If so, insert the new
        faculty member's info into the database.
        */
        if (fName_text_field.getText().isEmpty() || fName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'First name' text field is either "
                + "empty or exceeds 20 characters.");
        }
        else if (mName_text_field.getText().isEmpty() || mName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'Middle name' text field is either "
                + "empty or exceeds 20 characters.");
        }
        else if (lName_text_field.getText().isEmpty() || lName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'Last name' text field is either "
                + "empty or exceeds 20 characters.");
        }
        else if (dob_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'DOB' text field is empty.");
        else if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", email_text_field.getText())) || email_text_field.getText().length() > 30)
        {
            JOptionPane.showMessageDialog(this, "The 'Email' text field is either "
                + "invalid or exceeds 30 characters.");
        }
        else if (password_text_field.getText().isEmpty() || password_text_field.getText().length() > 30)
        {
            JOptionPane.showMessageDialog(this, "The 'Password' text field is either "
                + "empty or exceeds 30 characters.");
        }
        else if (officeNo_text_field.getText().isEmpty() || officeNo_text_field.getText().length() > 6)
        {
            JOptionPane.showMessageDialog(this, "The 'Office Number' text field is either "
                + "empty or exceeds 6 characters.");
        }
        else if (office_start_time_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'Office Start Time' text field is empty.");
        else if (office_end_time_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'Office End Time' text field is empty.");
        else if (telNo_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'Phone' text field is empty.");
        else if (salary_text_field.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "The 'Salary' text field is empty.");
        else
        {
            try
            {
                // Initialize variables with their respective field's value.
                String username = email_text_field.getText().substring(0, 
                        email_text_field.getText().indexOf('@'));
                String uniEmail = username + "@mascot.uni.edu";

                // Insert the values into the staff table in the database.
                pst = conn.prepareStatement("insert into staff(prefix, fName, mName, lName, "
                    + "suffix, DOB, gender, ethnicity, email, uniEmail, "
                    + "password, username, position, college, "
                    + "department, officeNo, officeDays, "
                    + "office_start_time, office_end_time, telNo, "
                    + "salary) values (?,?,?,?,?,?,?,?,?,?,?,?,?,"
                    + "?,?,?,?,?,?,?,?)");
                pst.setString(1, prefix_combo_box.getSelectedItem().toString());
                pst.setString(2, fName_text_field.getText());
                pst.setString(3, mName_text_field.getText());
                pst.setString(4, lName_text_field.getText());
                pst.setString(5, suffix_combo_box.getSelectedItem().toString());
                pst.setString(6, dob_text_field.getText());
                pst.setString(7, gender_combo_box.getSelectedItem().toString());
                pst.setString(8, ethnicity_combo_box.getSelectedItem().toString());
                pst.setString(9, email_text_field.getText());
                pst.setString(10, uniEmail);
                pst.setString(11, password_text_field.getText());
                pst.setString(12, username);
                pst.setString(13, position_combo_box.getSelectedItem().toString());
                pst.setString(14, college_combo_box.getSelectedItem().toString());
                pst.setString(15, dept_combo_box.getSelectedItem().toString());
                pst.setString(16, officeNo_text_field.getText());
                pst.setString(17, officeDays_combo_box.getSelectedItem().toString());
                pst.setString(18, office_start_time_text_field.getText());
                pst.setString(19, office_end_time_text_field.getText());
                pst.setString(20, telNo_text_field.getText());
                pst.setString(21, salary_text_field.getText());
                pst.executeUpdate();

                /* Confirm to the admin that the new faculty member's info has been added
                to the staff & faculty tables in the database, clear the form,
                and reload all the faculty members' info.
                */
                JOptionPane.showMessageDialog(this, "New faculty member added to "
                                                  + "the staff table in the database.");
                insertButton.setEnabled(true); // Enables the Insert button
                fName_text_field.setText("");
                mName_text_field.setText("");
                lName_text_field.setText("");
                dob_text_field.setText("");
                email_text_field.setText("");
                password_text_field.setText("");
                officeNo_text_field.setText("");
                office_start_time_text_field.setText("");
                office_end_time_text_field.setText("");
                telNo_text_field.setText("");
                salary_text_field.setText("");
                facultyLoad();
            }
            catch (SQLException ex)
            {
                Logger.getLogger(modifyFacultyInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_insertButtonMouseClicked

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseClicked
        /*
        Check if the admin filled all the text fields. If not, display a pop-up
        telling them to fill the specified text field. If so, update the selected
        faculty member's info.
        */
        if (fName_text_field.getText().isEmpty() || fName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'First name' text field is either "
                + "empty or exceeds 20 characters.");
        }
        else if (mName_text_field.getText().isEmpty() || mName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'Middle name' text field is either "
                + "empty or exceeds 20 characters.");
        }
        else if (lName_text_field.getText().isEmpty() || lName_text_field.getText().length() > 20)
        {
            JOptionPane.showMessageDialog(this, "The 'Last name' text field is either "
                + "empty or exceeds 20 characters.");
        }
        else if (dob_text_field.getText().isEmpty())
        JOptionPane.showMessageDialog(this, "The 'DOB' text field is empty.");
        else if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", email_text_field.getText())) || email_text_field.getText().length() > 30)
        {
            JOptionPane.showMessageDialog(this, "The 'Email' text field is either "
                + "invalid or exceeds 30 characters.");
        }
        else if (password_text_field.getText().isEmpty() || password_text_field.getText().length() > 30)
        {
            JOptionPane.showMessageDialog(this, "The 'Password' text field is either "
                + "empty or exceeds 30 characters.");
        }
        else if (officeNo_text_field.getText().isEmpty() || officeNo_text_field.getText().length() > 6)
        {
            JOptionPane.showMessageDialog(this, "The 'Office Number' text field is either "
                + "empty or exceeds 6 characters.");
        }
        else if (office_start_time_text_field.getText().isEmpty())
        JOptionPane.showMessageDialog(this, "The 'Office Start Time' text field is empty.");
        else if (office_end_time_text_field.getText().isEmpty())
        JOptionPane.showMessageDialog(this, "The 'Office End Time' text field is empty.");
        else if (telNo_text_field.getText().isEmpty())
        JOptionPane.showMessageDialog(this, "The 'Phone' text field is empty.");
        else if (salary_text_field.getText().isEmpty())
        JOptionPane.showMessageDialog(this, "The 'Salary' text field is empty.");
        else
        {
            try
            {
                // Get the clicked row.
                dtm = (DefaultTableModel)faculty_info_table.getModel();
                int selectedIndex = faculty_info_table.getSelectedRow();

                // Update each of the selected student's info to its respective field's value.
                String username = email_text_field.getText().substring(0, 
                        email_text_field.getText().indexOf('@'));
                String uniEmail = username + "@mascot.uni.edu";
                String id = dtm.getValueAt(selectedIndex, 0).toString();

                pst = conn.prepareStatement("update staff set prefix = ?, fName = ?, mName = ?, "
                    + "lName = ?, suffix = ?, DOB = ?, gender = ?, "
                    + "ethnicity = ?, email = ?, uniEmail = ?, "
                    + "password = ?, username = ?, position = ?, "
                    + "college = ?, department = ?, officeNo = ?, "
                    + "officeDays = ?, office_start_time = ?, "
                    + "office_end_time = ?, telNo = ?, salary = ? "
                    + "where staffNo = ?");
                pst.setString(1, prefix_combo_box.getSelectedItem().toString());
                pst.setString(2, fName_text_field.getText());
                pst.setString(3, mName_text_field.getText());
                pst.setString(4, lName_text_field.getText());
                pst.setString(5, suffix_combo_box.getSelectedItem().toString());
                pst.setString(6, dob_text_field.getText());
                pst.setString(7, gender_combo_box.getSelectedItem().toString());
                pst.setString(8, ethnicity_combo_box.getSelectedItem().toString());
                pst.setString(9, email_text_field.getText());
                pst.setString(10, uniEmail);
                pst.setString(11, password_text_field.getText());
                pst.setString(12, username);
                pst.setString(13, position_combo_box.getSelectedItem().toString());
                pst.setString(14, college_combo_box.getSelectedItem().toString());
                pst.setString(15, dept_combo_box.getSelectedItem().toString());
                pst.setString(16, officeNo_text_field.getText());
                pst.setString(17, officeDays_combo_box.getSelectedItem().toString());
                pst.setString(18, office_start_time_text_field.getText());
                pst.setString(19, office_end_time_text_field.getText());
                pst.setString(20, telNo_text_field.getText());
                pst.setString(21, salary_text_field.getText());
                pst.setString(22, id);
                pst.executeUpdate();

                /* Confirm to the admin that the selected staff member's info has been updated,
                clear the form, and reload each staff member's info.
                */
                JOptionPane.showMessageDialog(this, "Faculty member's info is updated.");
                insertButton.setEnabled(true); // Enables the Insert button
                fName_text_field.setText("");
                mName_text_field.setText("");
                lName_text_field.setText("");
                dob_text_field.setText("");
                email_text_field.setText("");
                password_text_field.setText("");
                officeNo_text_field.setText("");
                office_start_time_text_field.setText("");
                office_end_time_text_field.setText("");
                telNo_text_field.setText("");
                salary_text_field.setText("");
                facultyLoad();
            }
            catch (SQLException ex)
            {
                Logger.getLogger(modifyFacultyInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_updateButtonMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        try
        {
            // Get the clicked row.
            dtm = (DefaultTableModel)faculty_info_table.getModel();
            int selectedIndex = faculty_info_table.getSelectedRow();

            // Delete the selected staff member's info from both the database and the table.
            pst = conn.prepareStatement("delete from staff where staffNo = ?");
            pst.setString(1, dtm.getValueAt(selectedIndex, 0).toString());
            pst.executeUpdate();

            /* Confirm to the admin that the selected staff member's info has been deleted,
            clear the form, and reload the remaining staff members' info.
            */
            JOptionPane.showMessageDialog(this, "Faculty member's info is deleted.");
            insertButton.setEnabled(true); // Enables the Insert button
            fName_text_field.setText("");
            mName_text_field.setText("");
            lName_text_field.setText("");
            dob_text_field.setText("");
            email_text_field.setText("");
            password_text_field.setText("");
            officeNo_text_field.setText("");
            office_start_time_text_field.setText("");
            office_end_time_text_field.setText("");
            telNo_text_field.setText("");
            salary_text_field.setText("");
            facultyLoad();
        }
        catch (SQLException ex)
        {
            Logger.getLogger(modifyFacultyInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked
        // Clear all the text fields.
        insertButton.setEnabled(true); // Enables the Insert button
        fName_text_field.setText("");
        mName_text_field.setText("");
        lName_text_field.setText("");
        dob_text_field.setText("");
        email_text_field.setText("");
        password_text_field.setText("");
        officeNo_text_field.setText("");
        office_start_time_text_field.setText("");
        office_end_time_text_field.setText("");
        telNo_text_field.setText("");
        salary_text_field.setText("");
    }//GEN-LAST:event_clearButtonMouseClicked

    private void faculty_info_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_faculty_info_tableMouseClicked
        // Get the clicked row.
        dtm = (DefaultTableModel)faculty_info_table.getModel();
        int selectedIndex = faculty_info_table.getSelectedRow();

        // Set every field in the form to its respective table value.
        prefix_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 1));
        fName_text_field.setText(dtm.getValueAt(selectedIndex, 2).toString());
        mName_text_field.setText(dtm.getValueAt(selectedIndex, 3).toString());
        lName_text_field.setText(dtm.getValueAt(selectedIndex, 4).toString());
        suffix_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 5));
        dob_text_field.setText(dtm.getValueAt(selectedIndex, 6).toString());
        gender_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 7));
        ethnicity_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 8));
        email_text_field.setText(dtm.getValueAt(selectedIndex, 9).toString());
        password_text_field.setText(dtm.getValueAt(selectedIndex, 12).toString());
        position_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 13));
        college_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 14));
        dept_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 15));
        officeNo_text_field.setText(dtm.getValueAt(selectedIndex, 16).toString());
        officeDays_combo_box.setSelectedItem(dtm.getValueAt(selectedIndex, 17));
        office_start_time_text_field.setText(dtm.getValueAt(selectedIndex, 18).toString());
        office_end_time_text_field.setText(dtm.getValueAt(selectedIndex, 19).toString());
        telNo_text_field.setText(dtm.getValueAt(selectedIndex, 20).toString());
        salary_text_field.setText(dtm.getValueAt(selectedIndex, 21).toString());
        
        // Disable the Insert button.
        insertButton.setEnabled(false);
    }//GEN-LAST:event_faculty_info_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(modifyFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(modifyFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(modifyFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(modifyFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new modifyFacultyInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> college_combo_box;
    private javax.swing.JLabel college_label;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> dept_combo_box;
    private javax.swing.JLabel dept_label;
    private javax.swing.JLabel dob_label;
    private javax.swing.JFormattedTextField dob_text_field;
    private javax.swing.JLabel email_label;
    private javax.swing.JTextField email_text_field;
    private javax.swing.JComboBox<String> ethnicity_combo_box;
    private javax.swing.JLabel ethnicity_label;
    private javax.swing.JLabel fName_label;
    private javax.swing.JTextField fName_text_field;
    private javax.swing.JPanel faculty_info_form;
    private javax.swing.JScrollPane faculty_info_scroll_pane;
    private javax.swing.JTable faculty_info_table;
    private javax.swing.JComboBox<String> gender_combo_box;
    private javax.swing.JLabel gender_label;
    private javax.swing.JButton insertButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lName_label;
    private javax.swing.JTextField lName_text_field;
    private javax.swing.JMenu logoutButton;
    private javax.swing.JLabel mName_label;
    private javax.swing.JTextField mName_text_field;
    private javax.swing.JMenuBar modifyFacultyInfo_MenuBar;
    private javax.swing.JComboBox<String> officeDays_combo_box;
    private javax.swing.JLabel officeDays_label;
    private javax.swing.JLabel officeNo_label;
    private javax.swing.JFormattedTextField officeNo_text_field;
    private javax.swing.JLabel office_end_time_label;
    private javax.swing.JFormattedTextField office_end_time_text_field;
    private javax.swing.JLabel office_start_time_label;
    private javax.swing.JFormattedTextField office_start_time_text_field;
    private javax.swing.JLabel password_label;
    private javax.swing.JPasswordField password_text_field;
    private javax.swing.JComboBox<String> position_combo_box;
    private javax.swing.JLabel position_label;
    private javax.swing.JComboBox<String> prefix_combo_box;
    private javax.swing.JLabel prefix_label;
    private javax.swing.JLabel salary_label;
    private javax.swing.JFormattedTextField salary_text_field;
    private javax.swing.JComboBox<String> suffix_combo_box;
    private javax.swing.JLabel suffix_label;
    private javax.swing.JLabel telNo_label;
    private javax.swing.JFormattedTextField telNo_text_field;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
